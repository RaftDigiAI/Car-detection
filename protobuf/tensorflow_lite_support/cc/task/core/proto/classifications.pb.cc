// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_lite_support/cc/task/core/proto/classifications.proto

#include "tensorflow_lite_support/cc/task/core/proto/classifications.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tflite {
namespace task {
namespace core {
        template <typename>
PROTOBUF_CONSTEXPR Classifications::Classifications(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.classes_)*/ {},
      /*decltype(_impl_.head_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.head_index_)*/ 0,
    } {}
struct ClassificationsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClassificationsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClassificationsDefaultTypeInternal() {}
  union {
    Classifications _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClassificationsDefaultTypeInternal _Classifications_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR ClassificationResult::ClassificationResult(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.classifications_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct ClassificationResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClassificationResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClassificationResultDefaultTypeInternal() {}
  union {
    ClassificationResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClassificationResultDefaultTypeInternal _ClassificationResult_default_instance_;
}  // namespace core
}  // namespace task
}  // namespace tflite
static ::_pb::Metadata file_level_metadata_tensorflow_5flite_5fsupport_2fcc_2ftask_2fcore_2fproto_2fclassifications_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_tensorflow_5flite_5fsupport_2fcc_2ftask_2fcore_2fproto_2fclassifications_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_tensorflow_5flite_5fsupport_2fcc_2ftask_2fcore_2fproto_2fclassifications_2eproto = nullptr;
const ::uint32_t TableStruct_tensorflow_5flite_5fsupport_2fcc_2ftask_2fcore_2fproto_2fclassifications_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::tflite::task::core::Classifications, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tflite::task::core::Classifications, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tflite::task::core::Classifications, _impl_.classes_),
    PROTOBUF_FIELD_OFFSET(::tflite::task::core::Classifications, _impl_.head_index_),
    PROTOBUF_FIELD_OFFSET(::tflite::task::core::Classifications, _impl_.head_name_),
    ~0u,
    1,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tflite::task::core::ClassificationResult, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tflite::task::core::ClassificationResult, _impl_.classifications_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::tflite::task::core::Classifications)},
        {14, -1, -1, sizeof(::tflite::task::core::ClassificationResult)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::tflite::task::core::_Classifications_default_instance_._instance,
    &::tflite::task::core::_ClassificationResult_default_instance_._instance,
};
const char descriptor_table_protodef_tensorflow_5flite_5fsupport_2fcc_2ftask_2fcore_2fproto_2fclassifications_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n@tensorflow_lite_support/cc/task/core/p"
    "roto/classifications.proto\022\020tflite.task."
    "core\0326tensorflow_lite_support/cc/task/co"
    "re/proto/class.proto\"b\n\017Classifications\022"
    "(\n\007classes\030\001 \003(\0132\027.tflite.task.core.Clas"
    "s\022\022\n\nhead_index\030\002 \001(\005\022\021\n\thead_name\030\003 \001(\t"
    "\"R\n\024ClassificationResult\022:\n\017classificati"
    "ons\030\001 \003(\0132!.tflite.task.core.Classificat"
    "ions"
};
static const ::_pbi::DescriptorTable* const descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fcore_2fproto_2fclassifications_2eproto_deps[1] =
    {
        &::descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fcore_2fproto_2fclass_2eproto,
};
static ::absl::once_flag descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fcore_2fproto_2fclassifications_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fcore_2fproto_2fclassifications_2eproto = {
    false,
    false,
    324,
    descriptor_table_protodef_tensorflow_5flite_5fsupport_2fcc_2ftask_2fcore_2fproto_2fclassifications_2eproto,
    "tensorflow_lite_support/cc/task/core/proto/classifications.proto",
    &descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fcore_2fproto_2fclassifications_2eproto_once,
    descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fcore_2fproto_2fclassifications_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_tensorflow_5flite_5fsupport_2fcc_2ftask_2fcore_2fproto_2fclassifications_2eproto::offsets,
    file_level_metadata_tensorflow_5flite_5fsupport_2fcc_2ftask_2fcore_2fproto_2fclassifications_2eproto,
    file_level_enum_descriptors_tensorflow_5flite_5fsupport_2fcc_2ftask_2fcore_2fproto_2fclassifications_2eproto,
    file_level_service_descriptors_tensorflow_5flite_5fsupport_2fcc_2ftask_2fcore_2fproto_2fclassifications_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fcore_2fproto_2fclassifications_2eproto_getter() {
  return &descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fcore_2fproto_2fclassifications_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_tensorflow_5flite_5fsupport_2fcc_2ftask_2fcore_2fproto_2fclassifications_2eproto(&descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fcore_2fproto_2fclassifications_2eproto);
namespace tflite {
namespace task {
namespace core {
// ===================================================================

class Classifications::_Internal {
 public:
  using HasBits = decltype(std::declval<Classifications>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Classifications, _impl_._has_bits_);
  static void set_has_head_index(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_head_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

void Classifications::clear_classes() {
  _internal_mutable_classes()->Clear();
}
Classifications::Classifications(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tflite.task.core.Classifications)
}
Classifications::Classifications(const Classifications& from) : ::google::protobuf::Message() {
  Classifications* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.classes_){from._impl_.classes_},
      decltype(_impl_.head_name_){},
      decltype(_impl_.head_index_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.head_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.head_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.head_name_.Set(from._internal_head_name(), _this->GetArenaForAllocation());
  }
  _this->_impl_.head_index_ = from._impl_.head_index_;

  // @@protoc_insertion_point(copy_constructor:tflite.task.core.Classifications)
}
inline void Classifications::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.classes_){arena},
      decltype(_impl_.head_name_){},
      decltype(_impl_.head_index_){0},
  };
  _impl_.head_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.head_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Classifications::~Classifications() {
  // @@protoc_insertion_point(destructor:tflite.task.core.Classifications)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Classifications::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.classes_.~RepeatedPtrField();
  _impl_.head_name_.Destroy();
}
void Classifications::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Classifications::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.task.core.Classifications)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_classes()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.head_name_.ClearNonDefaultToEmpty();
  }
  _impl_.head_index_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Classifications::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 50, 2> Classifications::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Classifications, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Classifications_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .tflite.task.core.Class classes = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Classifications, _impl_.classes_)}},
    // optional int32 head_index = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Classifications, _impl_.head_index_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(Classifications, _impl_.head_index_)}},
    // optional string head_name = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Classifications, _impl_.head_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tflite.task.core.Class classes = 1;
    {PROTOBUF_FIELD_OFFSET(Classifications, _impl_.classes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 head_index = 2;
    {PROTOBUF_FIELD_OFFSET(Classifications, _impl_.head_index_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string head_name = 3;
    {PROTOBUF_FIELD_OFFSET(Classifications, _impl_.head_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tflite::task::core::Class>()},
  }}, {{
    "\40\0\0\11\0\0\0\0"
    "tflite.task.core.Classifications"
    "head_name"
  }},
};

::uint8_t* Classifications::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tflite.task.core.Classifications)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .tflite.task.core.Class classes = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_classes_size()); i < n; i++) {
    const auto& repfield = this->_internal_classes().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 head_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_head_index(), target);
  }

  // optional string head_name = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_head_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "tflite.task.core.Classifications.head_name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.task.core.Classifications)
  return target;
}

::size_t Classifications::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.task.core.Classifications)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tflite.task.core.Class classes = 1;
  total_size += 1UL * this->_internal_classes_size();
  for (const auto& msg : this->_internal_classes()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string head_name = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_head_name());
    }

    // optional int32 head_index = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_head_index());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Classifications::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Classifications::MergeImpl
};
const ::google::protobuf::Message::ClassData*Classifications::GetClassData() const { return &_class_data_; }


void Classifications::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Classifications*>(&to_msg);
  auto& from = static_cast<const Classifications&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tflite.task.core.Classifications)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_classes()->MergeFrom(from._internal_classes());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_head_name(from._internal_head_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.head_index_ = from._impl_.head_index_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Classifications::CopyFrom(const Classifications& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.task.core.Classifications)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Classifications::IsInitialized() const {
  return true;
}

void Classifications::InternalSwap(Classifications* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.classes_.InternalSwap(&other->_impl_.classes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.head_name_, lhs_arena,
                                       &other->_impl_.head_name_, rhs_arena);
        swap(_impl_.head_index_, other->_impl_.head_index_);
}

::google::protobuf::Metadata Classifications::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fcore_2fproto_2fclassifications_2eproto_getter, &descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fcore_2fproto_2fclassifications_2eproto_once,
      file_level_metadata_tensorflow_5flite_5fsupport_2fcc_2ftask_2fcore_2fproto_2fclassifications_2eproto[0]);
}
// ===================================================================

class ClassificationResult::_Internal {
 public:
};

ClassificationResult::ClassificationResult(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tflite.task.core.ClassificationResult)
}
ClassificationResult::ClassificationResult(const ClassificationResult& from) : ::google::protobuf::Message() {
  ClassificationResult* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.classifications_){from._impl_.classifications_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:tflite.task.core.ClassificationResult)
}
inline void ClassificationResult::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.classifications_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
ClassificationResult::~ClassificationResult() {
  // @@protoc_insertion_point(destructor:tflite.task.core.ClassificationResult)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ClassificationResult::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.classifications_.~RepeatedPtrField();
}
void ClassificationResult::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ClassificationResult::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.task.core.ClassificationResult)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_classifications()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ClassificationResult::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ClassificationResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ClassificationResult_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .tflite.task.core.Classifications classifications = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ClassificationResult, _impl_.classifications_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tflite.task.core.Classifications classifications = 1;
    {PROTOBUF_FIELD_OFFSET(ClassificationResult, _impl_.classifications_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tflite::task::core::Classifications>()},
  }}, {{
  }},
};

::uint8_t* ClassificationResult::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tflite.task.core.ClassificationResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .tflite.task.core.Classifications classifications = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_classifications_size()); i < n; i++) {
    const auto& repfield = this->_internal_classifications().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.task.core.ClassificationResult)
  return target;
}

::size_t ClassificationResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.task.core.ClassificationResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tflite.task.core.Classifications classifications = 1;
  total_size += 1UL * this->_internal_classifications_size();
  for (const auto& msg : this->_internal_classifications()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ClassificationResult::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ClassificationResult::MergeImpl
};
const ::google::protobuf::Message::ClassData*ClassificationResult::GetClassData() const { return &_class_data_; }


void ClassificationResult::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ClassificationResult*>(&to_msg);
  auto& from = static_cast<const ClassificationResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tflite.task.core.ClassificationResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_classifications()->MergeFrom(from._internal_classifications());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClassificationResult::CopyFrom(const ClassificationResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.task.core.ClassificationResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ClassificationResult::IsInitialized() const {
  return true;
}

void ClassificationResult::InternalSwap(ClassificationResult* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.classifications_.InternalSwap(&other->_impl_.classifications_);
}

::google::protobuf::Metadata ClassificationResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fcore_2fproto_2fclassifications_2eproto_getter, &descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fcore_2fproto_2fclassifications_2eproto_once,
      file_level_metadata_tensorflow_5flite_5fsupport_2fcc_2ftask_2fcore_2fproto_2fclassifications_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace core
}  // namespace task
}  // namespace tflite
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
