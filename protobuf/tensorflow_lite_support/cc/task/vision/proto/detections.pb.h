// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_lite_support/cc/task/vision/proto/detections.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fdetections_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fdetections_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "tensorflow_lite_support/cc/task/vision/proto/bounding_box.pb.h"
#include "tensorflow_lite_support/cc/task/vision/proto/class.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fdetections_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fdetections_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fdetections_2eproto;
namespace tflite {
namespace task {
namespace vision {
class Detection;
struct DetectionDefaultTypeInternal;
extern DetectionDefaultTypeInternal _Detection_default_instance_;
class DetectionResult;
struct DetectionResultDefaultTypeInternal;
extern DetectionResultDefaultTypeInternal _DetectionResult_default_instance_;
}  // namespace vision
}  // namespace task
}  // namespace tflite
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tflite {
namespace task {
namespace vision {

// ===================================================================


// -------------------------------------------------------------------

class Detection final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tflite.task.vision.Detection) */ {
 public:
  inline Detection() : Detection(nullptr) {}
  ~Detection() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Detection(::google::protobuf::internal::ConstantInitialized);

  Detection(const Detection& from);
  Detection(Detection&& from) noexcept
    : Detection() {
    *this = ::std::move(from);
  }

  inline Detection& operator=(const Detection& from) {
    CopyFrom(from);
    return *this;
  }
  inline Detection& operator=(Detection&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Detection& default_instance() {
    return *internal_default_instance();
  }
  static inline const Detection* internal_default_instance() {
    return reinterpret_cast<const Detection*>(
               &_Detection_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Detection& a, Detection& b) {
    a.Swap(&b);
  }
  inline void Swap(Detection* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Detection* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Detection* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Detection>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Detection& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Detection& from) {
    Detection::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Detection* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "tflite.task.vision.Detection";
  }
  protected:
  explicit Detection(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClassesFieldNumber = 3,
    kBoundingBoxFieldNumber = 2,
  };
  // repeated .tflite.task.vision.Class classes = 3;
  int classes_size() const;
  private:
  int _internal_classes_size() const;

  public:
  void clear_classes() ;
  ::tflite::task::vision::Class* mutable_classes(int index);
  ::google::protobuf::RepeatedPtrField< ::tflite::task::vision::Class >*
      mutable_classes();
  private:
  const ::google::protobuf::RepeatedPtrField<::tflite::task::vision::Class>& _internal_classes() const;
  ::google::protobuf::RepeatedPtrField<::tflite::task::vision::Class>* _internal_mutable_classes();
  public:
  const ::tflite::task::vision::Class& classes(int index) const;
  ::tflite::task::vision::Class* add_classes();
  const ::google::protobuf::RepeatedPtrField< ::tflite::task::vision::Class >&
      classes() const;
  // optional .tflite.task.vision.BoundingBox bounding_box = 2;
  bool has_bounding_box() const;
  void clear_bounding_box() ;
  const ::tflite::task::vision::BoundingBox& bounding_box() const;
  PROTOBUF_NODISCARD ::tflite::task::vision::BoundingBox* release_bounding_box();
  ::tflite::task::vision::BoundingBox* mutable_bounding_box();
  void set_allocated_bounding_box(::tflite::task::vision::BoundingBox* value);
  void unsafe_arena_set_allocated_bounding_box(::tflite::task::vision::BoundingBox* value);
  ::tflite::task::vision::BoundingBox* unsafe_arena_release_bounding_box();

  private:
  const ::tflite::task::vision::BoundingBox& _internal_bounding_box() const;
  ::tflite::task::vision::BoundingBox* _internal_mutable_bounding_box();

  public:
  // @@protoc_insertion_point(class_scope:tflite.task.vision.Detection)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 2, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::tflite::task::vision::Class > classes_;
    ::tflite::task::vision::BoundingBox* bounding_box_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fdetections_2eproto;
};// -------------------------------------------------------------------

class DetectionResult final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tflite.task.vision.DetectionResult) */ {
 public:
  inline DetectionResult() : DetectionResult(nullptr) {}
  ~DetectionResult() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DetectionResult(::google::protobuf::internal::ConstantInitialized);

  DetectionResult(const DetectionResult& from);
  DetectionResult(DetectionResult&& from) noexcept
    : DetectionResult() {
    *this = ::std::move(from);
  }

  inline DetectionResult& operator=(const DetectionResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline DetectionResult& operator=(DetectionResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DetectionResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const DetectionResult* internal_default_instance() {
    return reinterpret_cast<const DetectionResult*>(
               &_DetectionResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(DetectionResult& a, DetectionResult& b) {
    a.Swap(&b);
  }
  inline void Swap(DetectionResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DetectionResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DetectionResult* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DetectionResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DetectionResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DetectionResult& from) {
    DetectionResult::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DetectionResult* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "tflite.task.vision.DetectionResult";
  }
  protected:
  explicit DetectionResult(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDetectionsFieldNumber = 1,
  };
  // repeated .tflite.task.vision.Detection detections = 1;
  int detections_size() const;
  private:
  int _internal_detections_size() const;

  public:
  void clear_detections() ;
  ::tflite::task::vision::Detection* mutable_detections(int index);
  ::google::protobuf::RepeatedPtrField< ::tflite::task::vision::Detection >*
      mutable_detections();
  private:
  const ::google::protobuf::RepeatedPtrField<::tflite::task::vision::Detection>& _internal_detections() const;
  ::google::protobuf::RepeatedPtrField<::tflite::task::vision::Detection>* _internal_mutable_detections();
  public:
  const ::tflite::task::vision::Detection& detections(int index) const;
  ::tflite::task::vision::Detection* add_detections();
  const ::google::protobuf::RepeatedPtrField< ::tflite::task::vision::Detection >&
      detections() const;
  // @@protoc_insertion_point(class_scope:tflite.task.vision.DetectionResult)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::tflite::task::vision::Detection > detections_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fdetections_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Detection

// optional .tflite.task.vision.BoundingBox bounding_box = 2;
inline bool Detection::has_bounding_box() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.bounding_box_ != nullptr);
  return value;
}
inline const ::tflite::task::vision::BoundingBox& Detection::_internal_bounding_box() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::tflite::task::vision::BoundingBox* p = _impl_.bounding_box_;
  return p != nullptr ? *p : reinterpret_cast<const ::tflite::task::vision::BoundingBox&>(::tflite::task::vision::_BoundingBox_default_instance_);
}
inline const ::tflite::task::vision::BoundingBox& Detection::bounding_box() const {
  // @@protoc_insertion_point(field_get:tflite.task.vision.Detection.bounding_box)
  return _internal_bounding_box();
}
inline void Detection::unsafe_arena_set_allocated_bounding_box(::tflite::task::vision::BoundingBox* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bounding_box_);
  }
  _impl_.bounding_box_ = reinterpret_cast<::tflite::task::vision::BoundingBox*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tflite.task.vision.Detection.bounding_box)
}
inline ::tflite::task::vision::BoundingBox* Detection::release_bounding_box() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tflite::task::vision::BoundingBox* released = _impl_.bounding_box_;
  _impl_.bounding_box_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tflite::task::vision::BoundingBox* Detection::unsafe_arena_release_bounding_box() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:tflite.task.vision.Detection.bounding_box)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tflite::task::vision::BoundingBox* temp = _impl_.bounding_box_;
  _impl_.bounding_box_ = nullptr;
  return temp;
}
inline ::tflite::task::vision::BoundingBox* Detection::_internal_mutable_bounding_box() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.bounding_box_ == nullptr) {
    auto* p = CreateMaybeMessage<::tflite::task::vision::BoundingBox>(GetArenaForAllocation());
    _impl_.bounding_box_ = reinterpret_cast<::tflite::task::vision::BoundingBox*>(p);
  }
  return _impl_.bounding_box_;
}
inline ::tflite::task::vision::BoundingBox* Detection::mutable_bounding_box() {
  ::tflite::task::vision::BoundingBox* _msg = _internal_mutable_bounding_box();
  // @@protoc_insertion_point(field_mutable:tflite.task.vision.Detection.bounding_box)
  return _msg;
}
inline void Detection::set_allocated_bounding_box(::tflite::task::vision::BoundingBox* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bounding_box_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.bounding_box_ = reinterpret_cast<::tflite::task::vision::BoundingBox*>(value);
  // @@protoc_insertion_point(field_set_allocated:tflite.task.vision.Detection.bounding_box)
}

// repeated .tflite.task.vision.Class classes = 3;
inline int Detection::_internal_classes_size() const {
  return _internal_classes().size();
}
inline int Detection::classes_size() const {
  return _internal_classes_size();
}
inline ::tflite::task::vision::Class* Detection::mutable_classes(int index) {
  // @@protoc_insertion_point(field_mutable:tflite.task.vision.Detection.classes)
  return _internal_mutable_classes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::tflite::task::vision::Class >*
Detection::mutable_classes() {
  // @@protoc_insertion_point(field_mutable_list:tflite.task.vision.Detection.classes)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_classes();
}
inline const ::tflite::task::vision::Class& Detection::classes(int index) const {
  // @@protoc_insertion_point(field_get:tflite.task.vision.Detection.classes)
    return _internal_classes().Get(index);
}
inline ::tflite::task::vision::Class* Detection::add_classes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::tflite::task::vision::Class* _add = _internal_mutable_classes()->Add();
  // @@protoc_insertion_point(field_add:tflite.task.vision.Detection.classes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::tflite::task::vision::Class >&
Detection::classes() const {
  // @@protoc_insertion_point(field_list:tflite.task.vision.Detection.classes)
  return _internal_classes();
}
inline const ::google::protobuf::RepeatedPtrField<::tflite::task::vision::Class>&
Detection::_internal_classes() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.classes_;
}
inline ::google::protobuf::RepeatedPtrField<::tflite::task::vision::Class>*
Detection::_internal_mutable_classes() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.classes_;
}

// -------------------------------------------------------------------

// DetectionResult

// repeated .tflite.task.vision.Detection detections = 1;
inline int DetectionResult::_internal_detections_size() const {
  return _internal_detections().size();
}
inline int DetectionResult::detections_size() const {
  return _internal_detections_size();
}
inline void DetectionResult::clear_detections() {
  _internal_mutable_detections()->Clear();
}
inline ::tflite::task::vision::Detection* DetectionResult::mutable_detections(int index) {
  // @@protoc_insertion_point(field_mutable:tflite.task.vision.DetectionResult.detections)
  return _internal_mutable_detections()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::tflite::task::vision::Detection >*
DetectionResult::mutable_detections() {
  // @@protoc_insertion_point(field_mutable_list:tflite.task.vision.DetectionResult.detections)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_detections();
}
inline const ::tflite::task::vision::Detection& DetectionResult::detections(int index) const {
  // @@protoc_insertion_point(field_get:tflite.task.vision.DetectionResult.detections)
    return _internal_detections().Get(index);
}
inline ::tflite::task::vision::Detection* DetectionResult::add_detections() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::tflite::task::vision::Detection* _add = _internal_mutable_detections()->Add();
  // @@protoc_insertion_point(field_add:tflite.task.vision.DetectionResult.detections)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::tflite::task::vision::Detection >&
DetectionResult::detections() const {
  // @@protoc_insertion_point(field_list:tflite.task.vision.DetectionResult.detections)
  return _internal_detections();
}
inline const ::google::protobuf::RepeatedPtrField<::tflite::task::vision::Detection>&
DetectionResult::_internal_detections() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.detections_;
}
inline ::google::protobuf::RepeatedPtrField<::tflite::task::vision::Detection>*
DetectionResult::_internal_mutable_detections() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.detections_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace vision
}  // namespace task
}  // namespace tflite


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fdetections_2eproto_2epb_2eh
