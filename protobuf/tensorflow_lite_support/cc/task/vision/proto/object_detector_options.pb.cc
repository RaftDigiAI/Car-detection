// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_lite_support/cc/task/vision/proto/object_detector_options.proto

#include "tensorflow_lite_support/cc/task/vision/proto/object_detector_options.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tflite {
namespace task {
namespace vision {
        template <typename>
PROTOBUF_CONSTEXPR ObjectDetectorOptions::ObjectDetectorOptions(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.class_name_whitelist_)*/ {},
      /*decltype(_impl_.class_name_blacklist_)*/ {},
      /*decltype(_impl_.display_names_locale_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.model_file_with_metadata_)*/ nullptr,
      /*decltype(_impl_.compute_settings_)*/ nullptr,
      /*decltype(_impl_.base_options_)*/ nullptr,
      /*decltype(_impl_.score_threshold_)*/ 0,
      /*decltype(_impl_.max_results_)*/ -1,
      /*decltype(_impl_.num_threads_)*/ -1,
    } {}
struct ObjectDetectorOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ObjectDetectorOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ObjectDetectorOptionsDefaultTypeInternal() {}
  union {
    ObjectDetectorOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ObjectDetectorOptionsDefaultTypeInternal _ObjectDetectorOptions_default_instance_;
}  // namespace vision
}  // namespace task
}  // namespace tflite
static ::_pb::Metadata file_level_metadata_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fobject_5fdetector_5foptions_2eproto[1];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fobject_5fdetector_5foptions_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fobject_5fdetector_5foptions_2eproto = nullptr;
const ::uint32_t TableStruct_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fobject_5fdetector_5foptions_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::tflite::task::vision::ObjectDetectorOptions, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tflite::task::vision::ObjectDetectorOptions, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tflite::task::vision::ObjectDetectorOptions, _impl_.base_options_),
    PROTOBUF_FIELD_OFFSET(::tflite::task::vision::ObjectDetectorOptions, _impl_.model_file_with_metadata_),
    PROTOBUF_FIELD_OFFSET(::tflite::task::vision::ObjectDetectorOptions, _impl_.display_names_locale_),
    PROTOBUF_FIELD_OFFSET(::tflite::task::vision::ObjectDetectorOptions, _impl_.max_results_),
    PROTOBUF_FIELD_OFFSET(::tflite::task::vision::ObjectDetectorOptions, _impl_.score_threshold_),
    PROTOBUF_FIELD_OFFSET(::tflite::task::vision::ObjectDetectorOptions, _impl_.class_name_whitelist_),
    PROTOBUF_FIELD_OFFSET(::tflite::task::vision::ObjectDetectorOptions, _impl_.class_name_blacklist_),
    PROTOBUF_FIELD_OFFSET(::tflite::task::vision::ObjectDetectorOptions, _impl_.num_threads_),
    PROTOBUF_FIELD_OFFSET(::tflite::task::vision::ObjectDetectorOptions, _impl_.compute_settings_),
    3,
    1,
    0,
    5,
    4,
    ~0u,
    ~0u,
    6,
    2,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 17, -1, sizeof(::tflite::task::vision::ObjectDetectorOptions)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::tflite::task::vision::_ObjectDetectorOptions_default_instance_._instance,
};
const char descriptor_table_protodef_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fobject_5fdetector_5foptions_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\nJtensorflow_lite_support/cc/task/vision"
    "/proto/object_detector_options.proto\022\022tf"
    "lite.task.vision\032Ktensorflow/lite/experi"
    "mental/acceleration/configuration/config"
    "uration.proto\032=tensorflow_lite_support/c"
    "c/task/core/proto/base_options.proto\032>te"
    "nsorflow_lite_support/cc/task/core/proto"
    "/external_file.proto\"\360\002\n\025ObjectDetectorO"
    "ptions\0223\n\014base_options\030\t \001(\0132\035.tflite.ta"
    "sk.core.BaseOptions\022@\n\030model_file_with_m"
    "etadata\030\001 \001(\0132\036.tflite.task.core.Externa"
    "lFile\022 \n\024display_names_locale\030\002 \001(\t:\002en\022"
    "\027\n\013max_results\030\003 \001(\005:\002-1\022\027\n\017score_thresh"
    "old\030\004 \001(\002\022\034\n\024class_name_whitelist\030\005 \003(\t\022"
    "\034\n\024class_name_blacklist\030\006 \003(\t\022\027\n\013num_thr"
    "eads\030\007 \001(\005:\002-1\0227\n\020compute_settings\030\010 \001(\013"
    "2\035.tflite.proto.ComputeSettings"
};
static const ::_pbi::DescriptorTable* const descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fobject_5fdetector_5foptions_2eproto_deps[3] =
    {
        &::descriptor_table_tensorflow_2flite_2fexperimental_2facceleration_2fconfiguration_2fconfiguration_2eproto,
        &::descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fcore_2fproto_2fbase_5foptions_2eproto,
        &::descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fcore_2fproto_2fexternal_5ffile_2eproto,
};
static ::absl::once_flag descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fobject_5fdetector_5foptions_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fobject_5fdetector_5foptions_2eproto = {
    false,
    false,
    671,
    descriptor_table_protodef_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fobject_5fdetector_5foptions_2eproto,
    "tensorflow_lite_support/cc/task/vision/proto/object_detector_options.proto",
    &descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fobject_5fdetector_5foptions_2eproto_once,
    descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fobject_5fdetector_5foptions_2eproto_deps,
    3,
    1,
    schemas,
    file_default_instances,
    TableStruct_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fobject_5fdetector_5foptions_2eproto::offsets,
    file_level_metadata_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fobject_5fdetector_5foptions_2eproto,
    file_level_enum_descriptors_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fobject_5fdetector_5foptions_2eproto,
    file_level_service_descriptors_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fobject_5fdetector_5foptions_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fobject_5fdetector_5foptions_2eproto_getter() {
  return &descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fobject_5fdetector_5foptions_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fobject_5fdetector_5foptions_2eproto(&descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fobject_5fdetector_5foptions_2eproto);
namespace tflite {
namespace task {
namespace vision {
// ===================================================================

class ObjectDetectorOptions::_Internal {
 public:
  using HasBits = decltype(std::declval<ObjectDetectorOptions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ObjectDetectorOptions, _impl_._has_bits_);
  static const ::tflite::task::core::BaseOptions& base_options(const ObjectDetectorOptions* msg);
  static void set_has_base_options(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::tflite::task::core::ExternalFile& model_file_with_metadata(const ObjectDetectorOptions* msg);
  static void set_has_model_file_with_metadata(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_display_names_locale(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_max_results(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_score_threshold(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_num_threads(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::tflite::proto::ComputeSettings& compute_settings(const ObjectDetectorOptions* msg);
  static void set_has_compute_settings(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::tflite::task::core::BaseOptions& ObjectDetectorOptions::_Internal::base_options(const ObjectDetectorOptions* msg) {
  return *msg->_impl_.base_options_;
}
const ::tflite::task::core::ExternalFile& ObjectDetectorOptions::_Internal::model_file_with_metadata(const ObjectDetectorOptions* msg) {
  return *msg->_impl_.model_file_with_metadata_;
}
const ::tflite::proto::ComputeSettings& ObjectDetectorOptions::_Internal::compute_settings(const ObjectDetectorOptions* msg) {
  return *msg->_impl_.compute_settings_;
}
void ObjectDetectorOptions::clear_base_options() {
  if (_impl_.base_options_ != nullptr) _impl_.base_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void ObjectDetectorOptions::clear_model_file_with_metadata() {
  if (_impl_.model_file_with_metadata_ != nullptr) _impl_.model_file_with_metadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
/*static*/ const ::_pbi::LazyString ObjectDetectorOptions::Impl_::_i_give_permission_to_break_this_code_default_display_names_locale_{
    {{"en", 2}},
    {nullptr},
};
void ObjectDetectorOptions::clear_compute_settings() {
  if (_impl_.compute_settings_ != nullptr) _impl_.compute_settings_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
ObjectDetectorOptions::ObjectDetectorOptions(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tflite.task.vision.ObjectDetectorOptions)
}
ObjectDetectorOptions::ObjectDetectorOptions(const ObjectDetectorOptions& from) : ::google::protobuf::Message() {
  ObjectDetectorOptions* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.class_name_whitelist_){from._impl_.class_name_whitelist_},
      decltype(_impl_.class_name_blacklist_){from._impl_.class_name_blacklist_},
      decltype(_impl_.display_names_locale_){},
      decltype(_impl_.model_file_with_metadata_){nullptr},
      decltype(_impl_.compute_settings_){nullptr},
      decltype(_impl_.base_options_){nullptr},
      decltype(_impl_.score_threshold_){},
      decltype(_impl_.max_results_){},
      decltype(_impl_.num_threads_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.display_names_locale_.InitDefault();
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.display_names_locale_.Set(from._internal_display_names_locale(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.model_file_with_metadata_ = new ::tflite::task::core::ExternalFile(*from._impl_.model_file_with_metadata_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.compute_settings_ = new ::tflite::proto::ComputeSettings(*from._impl_.compute_settings_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000008u) != 0) {
    _this->_impl_.base_options_ = new ::tflite::task::core::BaseOptions(*from._impl_.base_options_);
  }
  ::memcpy(&_impl_.score_threshold_, &from._impl_.score_threshold_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.num_threads_) -
    reinterpret_cast<char*>(&_impl_.score_threshold_)) + sizeof(_impl_.num_threads_));

  // @@protoc_insertion_point(copy_constructor:tflite.task.vision.ObjectDetectorOptions)
}
inline void ObjectDetectorOptions::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.class_name_whitelist_){arena},
      decltype(_impl_.class_name_blacklist_){arena},
      decltype(_impl_.display_names_locale_){},
      decltype(_impl_.model_file_with_metadata_){nullptr},
      decltype(_impl_.compute_settings_){nullptr},
      decltype(_impl_.base_options_){nullptr},
      decltype(_impl_.score_threshold_){0},
      decltype(_impl_.max_results_){-1},
      decltype(_impl_.num_threads_){-1},
  };
  _impl_.display_names_locale_.InitDefault();
}
ObjectDetectorOptions::~ObjectDetectorOptions() {
  // @@protoc_insertion_point(destructor:tflite.task.vision.ObjectDetectorOptions)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ObjectDetectorOptions::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_class_name_whitelist()->~RepeatedPtrField();
  _internal_mutable_class_name_blacklist()->~RepeatedPtrField();
  _impl_.display_names_locale_.Destroy();
  if (this != internal_default_instance()) delete _impl_.model_file_with_metadata_;
  if (this != internal_default_instance()) delete _impl_.compute_settings_;
  if (this != internal_default_instance()) delete _impl_.base_options_;
}
void ObjectDetectorOptions::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ObjectDetectorOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.task.vision.ObjectDetectorOptions)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_class_name_whitelist()->Clear();
  _internal_mutable_class_name_blacklist()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.display_names_locale_.ClearToDefault(::tflite::task::vision::ObjectDetectorOptions::Impl_::_i_give_permission_to_break_this_code_default_display_names_locale_, GetArenaForAllocation());
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.model_file_with_metadata_ != nullptr);
      _impl_.model_file_with_metadata_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.compute_settings_ != nullptr);
      _impl_.compute_settings_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.base_options_ != nullptr);
      _impl_.base_options_->Clear();
    }
  }
  if (cached_has_bits & 0x00000070u) {
    _impl_.score_threshold_ = 0;
    _impl_.max_results_ = -1;
    _impl_.num_threads_ = -1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ObjectDetectorOptions::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 3, 117, 2> ObjectDetectorOptions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ObjectDetectorOptions, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ObjectDetectorOptions_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .tflite.task.core.ExternalFile model_file_with_metadata = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0, PROTOBUF_FIELD_OFFSET(ObjectDetectorOptions, _impl_.model_file_with_metadata_)}},
    // optional string display_names_locale = 2 [default = "en"];
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ObjectDetectorOptions, _impl_.display_names_locale_)}},
    // optional int32 max_results = 3 [default = -1];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ObjectDetectorOptions, _impl_.max_results_), 5>(),
     {24, 5, 0, PROTOBUF_FIELD_OFFSET(ObjectDetectorOptions, _impl_.max_results_)}},
    // optional float score_threshold = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 4, 0, PROTOBUF_FIELD_OFFSET(ObjectDetectorOptions, _impl_.score_threshold_)}},
    // repeated string class_name_whitelist = 5;
    {::_pbi::TcParser::FastSR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ObjectDetectorOptions, _impl_.class_name_whitelist_)}},
    // repeated string class_name_blacklist = 6;
    {::_pbi::TcParser::FastSR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(ObjectDetectorOptions, _impl_.class_name_blacklist_)}},
    // optional int32 num_threads = 7 [default = -1];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ObjectDetectorOptions, _impl_.num_threads_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(ObjectDetectorOptions, _impl_.num_threads_)}},
    // optional .tflite.proto.ComputeSettings compute_settings = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 2, 1, PROTOBUF_FIELD_OFFSET(ObjectDetectorOptions, _impl_.compute_settings_)}},
    // optional .tflite.task.core.BaseOptions base_options = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 3, 2, PROTOBUF_FIELD_OFFSET(ObjectDetectorOptions, _impl_.base_options_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .tflite.task.core.ExternalFile model_file_with_metadata = 1;
    {PROTOBUF_FIELD_OFFSET(ObjectDetectorOptions, _impl_.model_file_with_metadata_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string display_names_locale = 2 [default = "en"];
    {PROTOBUF_FIELD_OFFSET(ObjectDetectorOptions, _impl_.display_names_locale_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 max_results = 3 [default = -1];
    {PROTOBUF_FIELD_OFFSET(ObjectDetectorOptions, _impl_.max_results_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional float score_threshold = 4;
    {PROTOBUF_FIELD_OFFSET(ObjectDetectorOptions, _impl_.score_threshold_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // repeated string class_name_whitelist = 5;
    {PROTOBUF_FIELD_OFFSET(ObjectDetectorOptions, _impl_.class_name_whitelist_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // repeated string class_name_blacklist = 6;
    {PROTOBUF_FIELD_OFFSET(ObjectDetectorOptions, _impl_.class_name_blacklist_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // optional int32 num_threads = 7 [default = -1];
    {PROTOBUF_FIELD_OFFSET(ObjectDetectorOptions, _impl_.num_threads_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .tflite.proto.ComputeSettings compute_settings = 8;
    {PROTOBUF_FIELD_OFFSET(ObjectDetectorOptions, _impl_.compute_settings_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .tflite.task.core.BaseOptions base_options = 9;
    {PROTOBUF_FIELD_OFFSET(ObjectDetectorOptions, _impl_.base_options_), _Internal::kHasBitsOffset + 3, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tflite::task::core::ExternalFile>()},
    {::_pbi::TcParser::GetTable<::tflite::proto::ComputeSettings>()},
    {::_pbi::TcParser::GetTable<::tflite::task::core::BaseOptions>()},
  }}, {{
    "\50\0\24\0\0\24\24\0\0\0\0\0\0\0\0\0"
    "tflite.task.vision.ObjectDetectorOptions"
    "display_names_locale"
    "class_name_whitelist"
    "class_name_blacklist"
  }},
};

::uint8_t* ObjectDetectorOptions::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tflite.task.vision.ObjectDetectorOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .tflite.task.core.ExternalFile model_file_with_metadata = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::model_file_with_metadata(this),
        _Internal::model_file_with_metadata(this).GetCachedSize(), target, stream);
  }

  // optional string display_names_locale = 2 [default = "en"];
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_display_names_locale();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "tflite.task.vision.ObjectDetectorOptions.display_names_locale");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional int32 max_results = 3 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_max_results(), target);
  }

  // optional float score_threshold = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_score_threshold(), target);
  }

  // repeated string class_name_whitelist = 5;
  for (int i = 0, n = this->_internal_class_name_whitelist_size(); i < n; ++i) {
    const auto& s = this->_internal_class_name_whitelist().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "tflite.task.vision.ObjectDetectorOptions.class_name_whitelist");
    target = stream->WriteString(5, s, target);
  }

  // repeated string class_name_blacklist = 6;
  for (int i = 0, n = this->_internal_class_name_blacklist_size(); i < n; ++i) {
    const auto& s = this->_internal_class_name_blacklist().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "tflite.task.vision.ObjectDetectorOptions.class_name_blacklist");
    target = stream->WriteString(6, s, target);
  }

  // optional int32 num_threads = 7 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_num_threads(), target);
  }

  // optional .tflite.proto.ComputeSettings compute_settings = 8;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::compute_settings(this),
        _Internal::compute_settings(this).GetCachedSize(), target, stream);
  }

  // optional .tflite.task.core.BaseOptions base_options = 9;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::base_options(this),
        _Internal::base_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.task.vision.ObjectDetectorOptions)
  return target;
}

::size_t ObjectDetectorOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.task.vision.ObjectDetectorOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string class_name_whitelist = 5;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_class_name_whitelist().size());
  for (int i = 0, n = _internal_class_name_whitelist().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_class_name_whitelist().Get(i));
  }
  // repeated string class_name_blacklist = 6;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_class_name_blacklist().size());
  for (int i = 0, n = _internal_class_name_blacklist().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_class_name_blacklist().Get(i));
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional string display_names_locale = 2 [default = "en"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_display_names_locale());
    }

    // optional .tflite.task.core.ExternalFile model_file_with_metadata = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.model_file_with_metadata_);
    }

    // optional .tflite.proto.ComputeSettings compute_settings = 8;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.compute_settings_);
    }

    // optional .tflite.task.core.BaseOptions base_options = 9;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.base_options_);
    }

    // optional float score_threshold = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 5;
    }

    // optional int32 max_results = 3 [default = -1];
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_max_results());
    }

    // optional int32 num_threads = 7 [default = -1];
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_num_threads());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ObjectDetectorOptions::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ObjectDetectorOptions::MergeImpl
};
const ::google::protobuf::Message::ClassData*ObjectDetectorOptions::GetClassData() const { return &_class_data_; }


void ObjectDetectorOptions::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ObjectDetectorOptions*>(&to_msg);
  auto& from = static_cast<const ObjectDetectorOptions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tflite.task.vision.ObjectDetectorOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_class_name_whitelist()->MergeFrom(from._internal_class_name_whitelist());
  _this->_internal_mutable_class_name_blacklist()->MergeFrom(from._internal_class_name_blacklist());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_display_names_locale(from._internal_display_names_locale());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_model_file_with_metadata()->::tflite::task::core::ExternalFile::MergeFrom(
          from._internal_model_file_with_metadata());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_compute_settings()->::tflite::proto::ComputeSettings::MergeFrom(
          from._internal_compute_settings());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_base_options()->::tflite::task::core::BaseOptions::MergeFrom(
          from._internal_base_options());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.score_threshold_ = from._impl_.score_threshold_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.max_results_ = from._impl_.max_results_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.num_threads_ = from._impl_.num_threads_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ObjectDetectorOptions::CopyFrom(const ObjectDetectorOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.task.vision.ObjectDetectorOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ObjectDetectorOptions::IsInitialized() const {
  return true;
}

void ObjectDetectorOptions::InternalSwap(ObjectDetectorOptions* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.class_name_whitelist_.InternalSwap(&other->_impl_.class_name_whitelist_);
  _impl_.class_name_blacklist_.InternalSwap(&other->_impl_.class_name_blacklist_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.display_names_locale_, lhs_arena,
                                       &other->_impl_.display_names_locale_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ObjectDetectorOptions, _impl_.num_threads_)
      + sizeof(ObjectDetectorOptions::_impl_.num_threads_)
      - PROTOBUF_FIELD_OFFSET(ObjectDetectorOptions, _impl_.model_file_with_metadata_)>(
          reinterpret_cast<char*>(&_impl_.model_file_with_metadata_),
          reinterpret_cast<char*>(&other->_impl_.model_file_with_metadata_));
}

::google::protobuf::Metadata ObjectDetectorOptions::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fobject_5fdetector_5foptions_2eproto_getter, &descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fobject_5fdetector_5foptions_2eproto_once,
      file_level_metadata_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fobject_5fdetector_5foptions_2eproto[0]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace vision
}  // namespace task
}  // namespace tflite
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
