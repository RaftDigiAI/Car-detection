// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_lite_support/cc/task/vision/proto/image_searcher_options.proto

#include "tensorflow_lite_support/cc/task/vision/proto/image_searcher_options.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tflite {
namespace task {
namespace vision {
        template <typename>
PROTOBUF_CONSTEXPR ImageSearcherOptions::ImageSearcherOptions(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.base_options_)*/ nullptr,
      /*decltype(_impl_.embedding_options_)*/ nullptr,
      /*decltype(_impl_.search_options_)*/ nullptr,
    } {}
struct ImageSearcherOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ImageSearcherOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ImageSearcherOptionsDefaultTypeInternal() {}
  union {
    ImageSearcherOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ImageSearcherOptionsDefaultTypeInternal _ImageSearcherOptions_default_instance_;
}  // namespace vision
}  // namespace task
}  // namespace tflite
static ::_pb::Metadata file_level_metadata_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fimage_5fsearcher_5foptions_2eproto[1];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fimage_5fsearcher_5foptions_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fimage_5fsearcher_5foptions_2eproto = nullptr;
const ::uint32_t TableStruct_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fimage_5fsearcher_5foptions_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::tflite::task::vision::ImageSearcherOptions, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tflite::task::vision::ImageSearcherOptions, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tflite::task::vision::ImageSearcherOptions, _impl_.base_options_),
    PROTOBUF_FIELD_OFFSET(::tflite::task::vision::ImageSearcherOptions, _impl_.embedding_options_),
    PROTOBUF_FIELD_OFFSET(::tflite::task::vision::ImageSearcherOptions, _impl_.search_options_),
    0,
    1,
    2,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::tflite::task::vision::ImageSearcherOptions)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::tflite::task::vision::_ImageSearcherOptions_default_instance_._instance,
};
const char descriptor_table_protodef_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fimage_5fsearcher_5foptions_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\nItensorflow_lite_support/cc/task/vision"
    "/proto/image_searcher_options.proto\022\022tfl"
    "ite.task.vision\032=tensorflow_lite_support"
    "/cc/task/core/proto/base_options.proto\032G"
    "tensorflow_lite_support/cc/task/processo"
    "r/proto/embedding_options.proto\032Dtensorf"
    "low_lite_support/cc/task/processor/proto"
    "/search_options.proto\"\315\001\n\024ImageSearcherO"
    "ptions\0223\n\014base_options\030\001 \001(\0132\035.tflite.ta"
    "sk.core.BaseOptions\022B\n\021embedding_options"
    "\030\002 \001(\0132\'.tflite.task.processor.Embedding"
    "Options\022<\n\016search_options\030\003 \001(\0132$.tflite"
    ".task.processor.SearchOptions"
};
static const ::_pbi::DescriptorTable* const descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fimage_5fsearcher_5foptions_2eproto_deps[3] =
    {
        &::descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fcore_2fproto_2fbase_5foptions_2eproto,
        &::descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fprocessor_2fproto_2fembedding_5foptions_2eproto,
        &::descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fprocessor_2fproto_2fsearch_5foptions_2eproto,
};
static ::absl::once_flag descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fimage_5fsearcher_5foptions_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fimage_5fsearcher_5foptions_2eproto = {
    false,
    false,
    509,
    descriptor_table_protodef_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fimage_5fsearcher_5foptions_2eproto,
    "tensorflow_lite_support/cc/task/vision/proto/image_searcher_options.proto",
    &descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fimage_5fsearcher_5foptions_2eproto_once,
    descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fimage_5fsearcher_5foptions_2eproto_deps,
    3,
    1,
    schemas,
    file_default_instances,
    TableStruct_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fimage_5fsearcher_5foptions_2eproto::offsets,
    file_level_metadata_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fimage_5fsearcher_5foptions_2eproto,
    file_level_enum_descriptors_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fimage_5fsearcher_5foptions_2eproto,
    file_level_service_descriptors_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fimage_5fsearcher_5foptions_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fimage_5fsearcher_5foptions_2eproto_getter() {
  return &descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fimage_5fsearcher_5foptions_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fimage_5fsearcher_5foptions_2eproto(&descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fimage_5fsearcher_5foptions_2eproto);
namespace tflite {
namespace task {
namespace vision {
// ===================================================================

class ImageSearcherOptions::_Internal {
 public:
  using HasBits = decltype(std::declval<ImageSearcherOptions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ImageSearcherOptions, _impl_._has_bits_);
  static const ::tflite::task::core::BaseOptions& base_options(const ImageSearcherOptions* msg);
  static void set_has_base_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::tflite::task::processor::EmbeddingOptions& embedding_options(const ImageSearcherOptions* msg);
  static void set_has_embedding_options(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::tflite::task::processor::SearchOptions& search_options(const ImageSearcherOptions* msg);
  static void set_has_search_options(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::tflite::task::core::BaseOptions& ImageSearcherOptions::_Internal::base_options(const ImageSearcherOptions* msg) {
  return *msg->_impl_.base_options_;
}
const ::tflite::task::processor::EmbeddingOptions& ImageSearcherOptions::_Internal::embedding_options(const ImageSearcherOptions* msg) {
  return *msg->_impl_.embedding_options_;
}
const ::tflite::task::processor::SearchOptions& ImageSearcherOptions::_Internal::search_options(const ImageSearcherOptions* msg) {
  return *msg->_impl_.search_options_;
}
void ImageSearcherOptions::clear_base_options() {
  if (_impl_.base_options_ != nullptr) _impl_.base_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ImageSearcherOptions::clear_embedding_options() {
  if (_impl_.embedding_options_ != nullptr) _impl_.embedding_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void ImageSearcherOptions::clear_search_options() {
  if (_impl_.search_options_ != nullptr) _impl_.search_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
ImageSearcherOptions::ImageSearcherOptions(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tflite.task.vision.ImageSearcherOptions)
}
ImageSearcherOptions::ImageSearcherOptions(const ImageSearcherOptions& from) : ::google::protobuf::Message() {
  ImageSearcherOptions* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.base_options_){nullptr},
      decltype(_impl_.embedding_options_){nullptr},
      decltype(_impl_.search_options_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.base_options_ = new ::tflite::task::core::BaseOptions(*from._impl_.base_options_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.embedding_options_ = new ::tflite::task::processor::EmbeddingOptions(*from._impl_.embedding_options_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.search_options_ = new ::tflite::task::processor::SearchOptions(*from._impl_.search_options_);
  }

  // @@protoc_insertion_point(copy_constructor:tflite.task.vision.ImageSearcherOptions)
}
inline void ImageSearcherOptions::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.base_options_){nullptr},
      decltype(_impl_.embedding_options_){nullptr},
      decltype(_impl_.search_options_){nullptr},
  };
}
ImageSearcherOptions::~ImageSearcherOptions() {
  // @@protoc_insertion_point(destructor:tflite.task.vision.ImageSearcherOptions)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ImageSearcherOptions::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.base_options_;
  if (this != internal_default_instance()) delete _impl_.embedding_options_;
  if (this != internal_default_instance()) delete _impl_.search_options_;
}
void ImageSearcherOptions::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ImageSearcherOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:tflite.task.vision.ImageSearcherOptions)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.base_options_ != nullptr);
      _impl_.base_options_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.embedding_options_ != nullptr);
      _impl_.embedding_options_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.search_options_ != nullptr);
      _impl_.search_options_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ImageSearcherOptions::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> ImageSearcherOptions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ImageSearcherOptions, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ImageSearcherOptions_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .tflite.task.core.BaseOptions base_options = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ImageSearcherOptions, _impl_.base_options_)}},
    // optional .tflite.task.processor.EmbeddingOptions embedding_options = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(ImageSearcherOptions, _impl_.embedding_options_)}},
    // optional .tflite.task.processor.SearchOptions search_options = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(ImageSearcherOptions, _impl_.search_options_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .tflite.task.core.BaseOptions base_options = 1;
    {PROTOBUF_FIELD_OFFSET(ImageSearcherOptions, _impl_.base_options_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .tflite.task.processor.EmbeddingOptions embedding_options = 2;
    {PROTOBUF_FIELD_OFFSET(ImageSearcherOptions, _impl_.embedding_options_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .tflite.task.processor.SearchOptions search_options = 3;
    {PROTOBUF_FIELD_OFFSET(ImageSearcherOptions, _impl_.search_options_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tflite::task::core::BaseOptions>()},
    {::_pbi::TcParser::GetTable<::tflite::task::processor::EmbeddingOptions>()},
    {::_pbi::TcParser::GetTable<::tflite::task::processor::SearchOptions>()},
  }}, {{
  }},
};

::uint8_t* ImageSearcherOptions::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tflite.task.vision.ImageSearcherOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .tflite.task.core.BaseOptions base_options = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base_options(this),
        _Internal::base_options(this).GetCachedSize(), target, stream);
  }

  // optional .tflite.task.processor.EmbeddingOptions embedding_options = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::embedding_options(this),
        _Internal::embedding_options(this).GetCachedSize(), target, stream);
  }

  // optional .tflite.task.processor.SearchOptions search_options = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::search_options(this),
        _Internal::search_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tflite.task.vision.ImageSearcherOptions)
  return target;
}

::size_t ImageSearcherOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tflite.task.vision.ImageSearcherOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .tflite.task.core.BaseOptions base_options = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.base_options_);
    }

    // optional .tflite.task.processor.EmbeddingOptions embedding_options = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.embedding_options_);
    }

    // optional .tflite.task.processor.SearchOptions search_options = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.search_options_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ImageSearcherOptions::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ImageSearcherOptions::MergeImpl
};
const ::google::protobuf::Message::ClassData*ImageSearcherOptions::GetClassData() const { return &_class_data_; }


void ImageSearcherOptions::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ImageSearcherOptions*>(&to_msg);
  auto& from = static_cast<const ImageSearcherOptions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tflite.task.vision.ImageSearcherOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_base_options()->::tflite::task::core::BaseOptions::MergeFrom(
          from._internal_base_options());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_embedding_options()->::tflite::task::processor::EmbeddingOptions::MergeFrom(
          from._internal_embedding_options());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_search_options()->::tflite::task::processor::SearchOptions::MergeFrom(
          from._internal_search_options());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ImageSearcherOptions::CopyFrom(const ImageSearcherOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tflite.task.vision.ImageSearcherOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ImageSearcherOptions::IsInitialized() const {
  return true;
}

void ImageSearcherOptions::InternalSwap(ImageSearcherOptions* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImageSearcherOptions, _impl_.search_options_)
      + sizeof(ImageSearcherOptions::_impl_.search_options_)
      - PROTOBUF_FIELD_OFFSET(ImageSearcherOptions, _impl_.base_options_)>(
          reinterpret_cast<char*>(&_impl_.base_options_),
          reinterpret_cast<char*>(&other->_impl_.base_options_));
}

::google::protobuf::Metadata ImageSearcherOptions::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fimage_5fsearcher_5foptions_2eproto_getter, &descriptor_table_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fimage_5fsearcher_5foptions_2eproto_once,
      file_level_metadata_tensorflow_5flite_5fsupport_2fcc_2ftask_2fvision_2fproto_2fimage_5fsearcher_5foptions_2eproto[0]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace vision
}  // namespace task
}  // namespace tflite
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
